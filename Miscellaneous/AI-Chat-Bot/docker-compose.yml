version: "3.8"
services:
  backend:
    image: kartavya1710/kartavya-portfolio-mern-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
    # container_name: KartavyaPortfolioBackend
    environment:
      PORT: ${PORT}
      MONGO_URI: ${MONGO_URI}
      ADMIN_SECRET_USERNAME: ${ADMIN_SECRET_USERNAME}
      ADMIN_SECRET_PASSWORD: ${ADMIN_SECRET_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      # OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENSEARCH_URL: ${OPENSEARCH_URL}
      DEEPSEEK_URL: ${DEEPSEEK_URL}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME}
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      INDEX_NAME: ${INDEX_NAME}
    ports:
      - "3001:3000"
    depends_on:
      - opensearch
      - deepseek
    networks:
      - opensearch-net

  opensearch:
    image: opensearchproject/opensearch:latest
    environment:
      cluster.name: KartavyaPortfolioOpenSearch-cluster
      node.name: KartavyaPortfolioOpenSearch
      plugins.security.disabled: "true"
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      cluster.routing.allocation.allow_rebalance: always
      cluster.routing.allocation.enable: all
      cluster.routing.allocation.node_concurrent_recoveries: "2"
      cluster.routing.allocation.disk.threshold_enabled: "false"
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    networks:
      opensearch-net:
        aliases:
          - opensearch

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    # container_name: KartavyaPortfolioDashboard
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
    ports:
      - "5601:5601"
    networks:
      - opensearch-net

  deepseek:
    image: kartavya1710/kartavya-portfolio-deepseek:latest
    build:
      context: ./deepseek
      dockerfile: Dockerfile
    # container_name: KartavyaPortfolioDeepSeek
    hostname: deepseek # This ensures other containers can resolve "deepseek"
    environment:
      - GPU_ACCELERATION=${GPU_ACCELERATION}
      - MODEL_NAME=${MODEL_NAME}
      - HF_HOME=/cache/huggingface
    ports:
      - "8000:8000"
    volumes:
      - deepseek-cache:/cache/huggingface
    networks:
      - opensearch-net

volumes:
  opensearch-data:
  deepseek-cache:

networks:
  opensearch-net:
